#
# Copyright 2014-2017 Telefónica Investigación y Desarrollo, S.A.U
# 
# This file is part of fiware-cygnus (FIWARE project).
# 
# fiware-cygnus is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General
# Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any
# later version.
# fiware-cygnus is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
# details.
# 
# You should have received a copy of the GNU Affero General Public License along with fiware-cygnus. If not, see
# http://www.gnu.org/licenses/.
# 
# For those usages not covered by the GNU Affero General Public License please contact with iot_support at tid dot es
#

# To be put in APACHE_FLUME_HOME/conf/log4j2.properties
# Define some default values.
# These can be overridden by system properties, e.g. the following logs in the standard output, which is very useful
# for testing purposes (-Dflume.root.logger=DEBUG,console)
flume.root.logger=INFO,LOGFILE
#flume.root.logger=DEBUG,console
flume.log.dir=/var/log/cygnus/
flume.log.file=cygnus.log

# Logging level for third party components.
log4j.logger.org.apache.flume.lifecycle = WARN
log4j.logger.org.jboss = WARN
log4j.logger.org.mortbay = WARN
log4j.logger.org.apache.avro.ipc.NettyTransceiver = WARN
log4j.logger.org.apache.hadoop = WARN
log4j.logger.org.mongodb = WARN
log4j.logger.org.apache.http = WARN
log4j.logger.org.apache.zookeeper = WARN
log4j.logger.org.apache.kafka = WARN
log4j.logger.org.I0Itec = WARN
log4j.logger.com.amazonaws = WARN


# Extra logging related to initialization of Log4j
# Set to debug or trace if log4j initialization is failing
status = warn
# Name of the configuration
name = ConsoleLogConfig

# Console appender configuration
appender.console.type = Console
appender.console.name = consoleLogger
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = time=%d{yyyy-MM-dd}T%d{HH:mm:ss.SSS}Z | lvl=%p | corr=%X{correlatorId} | trans=%X{transactionId} | srv=%X{service} | subsrv=%X{subservice} | comp=%X{agent} | op=%M | msg=%C[%L] : %m%n

# Root logger level
rootLogger.level = warn
# Root logger referring to console appender
rootLogger.appenderRef.stdout.ref = consoleLogger
